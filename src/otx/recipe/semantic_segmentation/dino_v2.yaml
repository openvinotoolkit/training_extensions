model:
  class_path: otx.algo.segmentation.dino_v2_seg.OTXDinoV2Seg
  init_args:
    label_info: 2

    criterion_configuration:
      - type: CrossEntropyLoss
        params:
          ignore_index: 255

    optimizer:
      class_path: torch.optim.AdamW
      init_args:
        lr: 0.001
        betas:
          - 0.9
          - 0.999
        weight_decay: 0.0001

    export_image_configuration:
      image_size:
        - 1
        - 3
        - 560
        - 560

    scheduler:
      class_path: torch.optim.lr_scheduler.PolynomialLR
      init_args:
        total_iters: 100
        power: 0.9
        last_epoch: -1

engine:
  task: SEMANTIC_SEGMENTATION
  device: auto

callback_monitor: val/Dice

data: ../_base_/data/semantic_segmentation.yaml
overrides:
  data:
    train_subset:
      transforms:
        - class_path: otx.core.data.transform_libs.torchvision.RandomResizedCrop
          init_args:
            input_size: # TODO (eunwoo): integrate this into a common part
              - 560
              - 560
            crop_ratio_range:
              - 0.2
              - 1.0
            aspect_ratio_range:
              - 0.5
              - 2.0
            transform_mask: true
        - class_path: otx.core.data.transform_libs.torchvision.PhotoMetricDistortion
        - class_path: otx.core.data.transform_libs.torchvision.RandomFlip
          init_args:
            prob: 0.5
            is_numpy_to_tvtensor: true
        - class_path: torchvision.transforms.v2.ToDtype
          init_args:
            dtype: ${as_torch_dtype:torch.float32}
        - class_path: torchvision.transforms.v2.Normalize
          init_args:
            mean: [123.675, 116.28, 103.53]
            std: [58.395, 57.12, 57.375]

    val_subset:
      transforms:
        - class_path: otx.core.data.transform_libs.torchvision.Resize
          init_args:
            input_size: # TODO (eunwoo): integrate this into a common part
              - 560
              - 560
            transform_mask: true
            is_numpy_to_tvtensor: true
        - class_path: torchvision.transforms.v2.ToDtype
          init_args:
            dtype: ${as_torch_dtype:torch.float32}
        - class_path: torchvision.transforms.v2.Normalize
          init_args:
            mean: [123.675, 116.28, 103.53]
            std: [58.395, 57.12, 57.375]

    test_subset:
      transforms:
        - class_path: otx.core.data.transform_libs.torchvision.Resize
          init_args:
            input_size: # TODO (eunwoo): integrate this into a common part
              - 560
              - 560
            transform_mask: true
            is_numpy_to_tvtensor: true
        - class_path: torchvision.transforms.v2.ToDtype
          init_args:
            dtype: ${as_torch_dtype:torch.float32}
        - class_path: torchvision.transforms.v2.Normalize
          init_args:
            mean: [123.675, 116.28, 103.53]
            std: [58.395, 57.12, 57.375]

  callbacks:
    - class_path: otx.algo.callbacks.adaptive_early_stopping.EarlyStoppingWithWarmup
      init_args:
        warmup_iters: 100
