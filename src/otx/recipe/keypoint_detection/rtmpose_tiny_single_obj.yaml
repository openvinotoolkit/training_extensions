model:
  class_path: otx.algo.keypoint_detection.rtmpose.RTMPoseTiny
  init_args:
    label_info: 17

    optimizer:
      class_path: torch.optim.AdamW
      init_args:
        lr: 0.001
        weight_decay: 0.0001

    scheduler:
      class_path: otx.core.schedulers.LinearWarmupSchedulerCallable
      init_args:
        num_warmup_steps: 3
        main_scheduler_callable:
          class_path: lightning.pytorch.cli.ReduceLROnPlateau
          init_args:
            mode: max
            factor: 0.1
            patience: 9
            monitor: val/accuracy

engine:
  task: KEYPOINT_DETECTION
  device: auto

callback_monitor: val/accuracy

data: ../_base_/data/keypoint_detection.yaml

overrides:
  gradient_clip_val: 35.0
  reset:
    - data.train_subset.transforms
    - data.val_subset.transforms
    - data.test_subset.transforms
  input_size:
    - 512
    - 512
  train_subset:
    transforms:
      - class_path: otx.core.data.transform_libs.torchvision.TopdownAffine
        init_args:
          input_size: $(input_size)
      - class_path: otx.core.data.transform_libs.torchvision.YOLOXHSVRandomAug
        init_args:
          is_numpy_to_tvtensor: true
      - class_path: torchvision.transforms.v2.ToDtype
        init_args:
          dtype: ${as_torch_dtype:torch.float32}
      - class_path: torchvision.transforms.v2.Normalize
        init_args:
          mean: [123.675, 116.28, 103.53]
          std: [58.395, 57.12, 57.375]
  val_subset:
    transforms:
      - class_path: otx.core.data.transform_libs.torchvision.TopdownAffine
        init_args:
          input_size: $(input_size)
          is_numpy_to_tvtensor: true
      - class_path: torchvision.transforms.v2.ToDtype
        init_args:
          dtype: ${as_torch_dtype:torch.float32}
      - class_path: torchvision.transforms.v2.Normalize
        init_args:
          mean: [123.675, 116.28, 103.53]
          std: [58.395, 57.12, 57.375]
  test_subset:
    transforms:
      - class_path: otx.core.data.transform_libs.torchvision.TopdownAffine
        init_args:
          input_size: $(input_size)
          is_numpy_to_tvtensor: true
      - class_path: torchvision.transforms.v2.ToDtype
        init_args:
          dtype: ${as_torch_dtype:torch.float32}
      - class_path: torchvision.transforms.v2.Normalize
        init_args:
          mean: [123.675, 116.28, 103.53]
          std: [58.395, 57.12, 57.375]
