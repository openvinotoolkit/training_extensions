class_path: otx.core.model.entity.detection.MMDetCompatibleModel
init_args:
  config:
    backbone:
      depth: 50
      frozen_stages: 1
      init_cfg:
        checkpoint: torchvision://resnet50
        type: Pretrained
      norm_cfg:
        requires_grad: true
        type: BN
      norm_eval: true
      num_stages: 4
      out_indices:
        - 0
        - 1
        - 2
        - 3
      style: pytorch
      type: ResNet
    bbox_head:
      anchor_generator:
        octave_base_scale: 8
        ratios:
          - 1.0
        scales_per_octave: 1
        strides:
          - 8
          - 16
          - 32
          - 64
          - 128
        type: AnchorGenerator
      bbox_coder:
        target_means:
          - 0.0
          - 0.0
          - 0.0
          - 0.0
        target_stds:
          - 0.1
          - 0.1
          - 0.2
          - 0.2
        type: DeltaXYWHBBoxCoder
      feat_channels: 256
      in_channels: 256
      loss_bbox:
        loss_weight: 2.0
        type: GIoULoss
      loss_centerness:
        loss_weight: 1.0
        type: CrossEntropyLoss
        use_sigmoid: true
      loss_cls:
        alpha: 0.25
        gamma: 2.0
        loss_weight: 1.0
        type: FocalLoss
        use_sigmoid: true
      num_classes: 80
      stacked_convs: 4
      type: ATSSHead
    data_preprocessor:
      bgr_to_rgb: false
      mean:
        - 123.675
        - 116.28
        - 103.53
      pad_size_divisor: 32
      std:
        - 58.395
        - 57.12
        - 57.375
      type: DetDataPreprocessor
    neck:
      add_extra_convs: on_output
      in_channels:
        - 256
        - 512
        - 1024
        - 2048
      num_outs: 5
      out_channels: 256
      start_level: 1
      type: FPN
    test_cfg:
      max_per_img: 100
      min_bbox_size: 0
      nms:
        iou_threshold: 0.6
        type: nms
      nms_pre: 1000
      score_thr: 0.05
    train_cfg:
      allowed_border: -1
      assigner:
        topk: 9
        type: ATSSAssigner
      debug: false
      pos_weight: -1
    type: ATSS
# data: detection_base
# optimizer: torch.optim.Adam: lr=0.001, weight_decay=0.0
# scheduler: lightning.pytorch.cli.ReduceLROnPlateau: factor=0.5, patience=1, monitor=train/loss
