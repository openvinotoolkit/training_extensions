name: Pre-Merge Checks

on:
  push:
    branches:
      - develop
      - releases/**
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch: # run on request (no need for PR)

# This is what will cancel the workflow concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  Code-Quality-Checks:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: python -m pip install -r requirements/dev.txt
      - name: Code Quality Checks
        run: tox -e pre-commit
  Pre-Merge-Unit-Test:
    runs-on: [self-hosted, linux, x64, dev]
    needs: Code-Quality-Checks
    timeout-minutes: 120
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python -m pip install -r requirements/dev.txt
      - name: Unit-testing
        run: tox -e pre-merge -- tests/unit
      - name: Upload coverage reports to Codecov
        run: |
          # If the workflow is triggered from PR then it gets the commit id from the PR.
          # else it uses the commit id of the latest commit. This is because the commit
          # of the checked-out branch/commit does not exist in the tree as it is grafted.
          # Also note: GitHub does not pass secrets to pipelines triggered from a fork.
          # This means that upload will fail for PRs from forks.
          if [ -n "${{ github.event.pull_request.head.sha }}" ]
          then
            COMMIT_ID=${{ github.event.pull_request.head.sha }}
          else
            COMMIT_ID=${{ github.sha }}
          fi
          # current version of codecov-action does not support uploading reports through the proxy
          # so we use the latest version of codecov uploader binary
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${{ secrets.CODECOV_TOKEN }} --sha $COMMIT_ID -U $HTTP_PROXY -f .tox/coverage.xml
  Pre-Merge-Integration-Common-Test:
    runs-on: [self-hosted, linux, x64, dev]
    needs: Pre-Merge-Unit-Test
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python -m pip install -r requirements/dev.txt
      - name: Integration-testing
        run: tox -e pre-merge -- tests/integration/cli/test_cli.py
  Pre-Merge-Integration-Cls-Test:
    runs-on: [self-hosted, linux, x64, dev]
    needs: Pre-Merge-Unit-Test
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python -m pip install -r requirements/dev.txt
      - name: Integration-testing
        run: tox -e pre-merge-cls
  Pre-Merge-Integration-Det-Test:
    runs-on: [self-hosted, linux, x64, dev]
    needs: Pre-Merge-Unit-Test
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python -m pip install -r requirements/dev.txt
      - name: Integration-testing
        run: tox -e pre-merge-det
  Pre-Merge-Integration-Seg-Test:
    runs-on: [self-hosted, linux, x64, dev]
    needs: Pre-Merge-Unit-Test
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python -m pip install -r requirements/dev.txt
      - name: Integration-testing
        run: tox -e pre-merge-seg
  Pre-Merge-Integration-Action-Test:
    runs-on: [self-hosted, linux, x64, dev]
    needs: Pre-Merge-Unit-Test
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python -m pip install -r requirements/dev.txt
      - name: Integration-testing
        run: tox -e pre-merge-action
  Pre-Merge-Integration-Anomaly-Test:
    runs-on: [self-hosted, linux, x64, dev]
    needs: Pre-Merge-Unit-Test
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: python -m pip install -r requirements/dev.txt
      - name: Integration-testing
        run: tox -e pre-merge-anomaly
