name: Pre-Merge Checks

on:
  pull_request:
    branches:
      - feature/otx
    workflow_dispatch: # run on request (no need for PR)

jobs:
  Code-Quality-Checks:
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: python -m pip install tox
      - name: Code Quality Checks
        run: tox -re pre-commit
  Pre-Merge-Tests:
    runs-on: [self-hosted, linux, x64]
    needs: Code-Quality-Checks
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: python -m pip install tox
      - name: Pre-Merge Tests
        run: tox -re pre-merge
      - name: Upload coverage report
        run: |
          # If the workflow is triggered from PR then it gets the commit id from the PR.
          # else it uses the commit id of the latest commit. This is because the commit
          # of the checked-out branch/commit does not exist in the tree as it is grafted.
          # Also note: GitHub does not pass secrets to pipelines triggered from a fork.
          # This means that upload will fail for PRs from forks.
          if [ -n "${{ github.event.pull_request.head.sha }}" ]
          then
            COMMIT_ID=${{ github.event.pull_request.head.sha }}
          else
            COMMIT_ID=${{ github.sha }}
          fi
          pip install codacy-coverage
          python-codacy-coverage -r .tox/coverage.xml -t ${{ secrets.CODACY }} -c $COMMIT_ID
