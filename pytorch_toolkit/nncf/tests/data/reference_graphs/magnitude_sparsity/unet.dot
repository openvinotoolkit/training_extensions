strict digraph  {
"0 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=0, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"1 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/conv2d" [id=1, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"2 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]/batch_norm" [id=2, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"3 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/RELU" [id=3, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]", type=RELU];
"4 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=4, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"5 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d" [id=5, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"6 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]/batch_norm" [id=6, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"7 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/RELU" [id=7, scope="UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]", type=RELU];
"8 UNet/max_pool2d" [id=8, scope=UNet, type=max_pool2d];
"9 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=9, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"10 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d" [id=10, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"11 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]/batch_norm" [id=11, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"12 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/RELU" [id=12, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]", type=RELU];
"13 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=13, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"14 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d" [id=14, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"15 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]/batch_norm" [id=15, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"16 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/RELU" [id=16, scope="UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]", type=RELU];
"17 UNet/max_pool2d" [id=17, scope=UNet, type=max_pool2d];
"18 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=18, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"19 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d" [id=19, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"20 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]/batch_norm" [id=20, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"21 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/RELU" [id=21, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]", type=RELU];
"22 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=22, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"23 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d" [id=23, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"24 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]/batch_norm" [id=24, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"25 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/RELU" [id=25, scope="UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]", type=RELU];
"26 UNet/max_pool2d" [id=26, scope=UNet, type=max_pool2d];
"27 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=27, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"28 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d" [id=28, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"29 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]/batch_norm" [id=29, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"30 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/RELU" [id=30, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]", type=RELU];
"31 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=31, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"32 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d" [id=32, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"33 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]/batch_norm" [id=33, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"34 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/RELU" [id=34, scope="UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]", type=RELU];
"35 UNet/max_pool2d" [id=35, scope=UNet, type=max_pool2d];
"36 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=36, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"37 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d" [id=37, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"38 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]/batch_norm" [id=38, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"39 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/RELU" [id=39, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]", type=RELU];
"40 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=40, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"41 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d" [id=41, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"42 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]/batch_norm" [id=42, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"43 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/RELU" [id=43, scope="UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]", type=RELU];
"44 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=44, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"45 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d" [id=45, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"46 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat" [id=46, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]", type=cat];
"47 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=47, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"48 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d" [id=48, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"49 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm" [id=49, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"50 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU" [id=50, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"51 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=51, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"52 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d" [id=52, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"53 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm" [id=53, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"54 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU" [id=54, scope="UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"55 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=55, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"56 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d" [id=56, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"57 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat" [id=57, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]", type=cat];
"58 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=58, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"59 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d" [id=59, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"60 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm" [id=60, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"61 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU" [id=61, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"62 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=62, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"63 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d" [id=63, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"64 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm" [id=64, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"65 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU" [id=65, scope="UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"66 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=66, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"67 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d" [id=67, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"68 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat" [id=68, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]", type=cat];
"69 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=69, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"70 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d" [id=70, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"71 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm" [id=71, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"72 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU" [id=72, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"73 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=73, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"74 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d" [id=74, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"75 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm" [id=75, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"76 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU" [id=76, scope="UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"77 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=77, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"78 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d" [id=78, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]", type=conv_transpose2d];
"79 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat" [id=79, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]", type=cat];
"80 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=80, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"81 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d" [id=81, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]", type=conv2d];
"82 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm" [id=82, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]", type=batch_norm];
"83 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU" [id=83, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]", type=RELU];
"84 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=84, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"85 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d" [id=85, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]", type=conv2d];
"86 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm" [id=86, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]", type=batch_norm];
"87 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU" [id=87, scope="UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]", type=RELU];
"88 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" [id=88, scope="UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]", type=apply_binary_mask];
"89 UNet/NNCFConv2d[last]/conv2d" [id=89, scope="UNet/NNCFConv2d[last]", type=conv2d];
"0 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "1 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/conv2d";
"1 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[0]/conv2d" -> "2 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]/batch_norm";
"2 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[1]/batch_norm" -> "3 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/RELU";
"3 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[2]/RELU" -> "5 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d";
"4 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "5 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d";
"5 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/NNCFConv2d[3]/conv2d" -> "6 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]/batch_norm";
"6 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/BatchNorm2d[4]/batch_norm" -> "7 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/RELU";
"7 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/RELU" -> "8 UNet/max_pool2d";
"7 UNet/ModuleList[down_path]/UNetConvBlock[0]/Sequential[block]/ReLU[5]/RELU" -> "79 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat";
"8 UNet/max_pool2d" -> "10 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d";
"9 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "10 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d";
"10 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[0]/conv2d" -> "11 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]/batch_norm";
"11 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[1]/batch_norm" -> "12 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/RELU";
"12 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[2]/RELU" -> "14 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d";
"13 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "14 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d";
"14 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/NNCFConv2d[3]/conv2d" -> "15 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]/batch_norm";
"15 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/BatchNorm2d[4]/batch_norm" -> "16 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/RELU";
"16 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/RELU" -> "17 UNet/max_pool2d";
"16 UNet/ModuleList[down_path]/UNetConvBlock[1]/Sequential[block]/ReLU[5]/RELU" -> "68 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat";
"17 UNet/max_pool2d" -> "19 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d";
"18 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "19 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d";
"19 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[0]/conv2d" -> "20 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]/batch_norm";
"20 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[1]/batch_norm" -> "21 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/RELU";
"21 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[2]/RELU" -> "23 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d";
"22 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "23 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d";
"23 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/NNCFConv2d[3]/conv2d" -> "24 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]/batch_norm";
"24 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/BatchNorm2d[4]/batch_norm" -> "25 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/RELU";
"25 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/RELU" -> "26 UNet/max_pool2d";
"25 UNet/ModuleList[down_path]/UNetConvBlock[2]/Sequential[block]/ReLU[5]/RELU" -> "57 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat";
"26 UNet/max_pool2d" -> "28 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d";
"27 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "28 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d";
"28 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[0]/conv2d" -> "29 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]/batch_norm";
"29 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[1]/batch_norm" -> "30 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/RELU";
"30 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[2]/RELU" -> "32 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d";
"31 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "32 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d";
"32 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/NNCFConv2d[3]/conv2d" -> "33 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]/batch_norm";
"33 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/BatchNorm2d[4]/batch_norm" -> "34 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/RELU";
"34 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/RELU" -> "35 UNet/max_pool2d";
"34 UNet/ModuleList[down_path]/UNetConvBlock[3]/Sequential[block]/ReLU[5]/RELU" -> "46 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat";
"35 UNet/max_pool2d" -> "37 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d";
"36 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "37 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d";
"37 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[0]/conv2d" -> "38 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]/batch_norm";
"38 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[1]/batch_norm" -> "39 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/RELU";
"39 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[2]/RELU" -> "41 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d";
"40 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "41 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d";
"41 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/NNCFConv2d[3]/conv2d" -> "42 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]/batch_norm";
"42 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/BatchNorm2d[4]/batch_norm" -> "43 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/RELU";
"43 UNet/ModuleList[down_path]/UNetConvBlock[4]/Sequential[block]/ReLU[5]/RELU" -> "45 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d";
"44 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "45 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d";
"45 UNet/ModuleList[up_path]/UNetUpBlock[0]/NNCFConvTranspose2d[up]/conv_transpose2d" -> "46 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat";
"46 UNet/ModuleList[up_path]/UNetUpBlock[0]/cat" -> "48 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d";
"47 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "48 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d";
"48 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d" -> "49 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm";
"49 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm" -> "50 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU";
"50 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU" -> "52 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d";
"51 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "52 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d";
"52 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d" -> "53 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm";
"53 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm" -> "54 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU";
"54 UNet/ModuleList[up_path]/UNetUpBlock[0]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU" -> "56 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d";
"55 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "56 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d";
"56 UNet/ModuleList[up_path]/UNetUpBlock[1]/NNCFConvTranspose2d[up]/conv_transpose2d" -> "57 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat";
"57 UNet/ModuleList[up_path]/UNetUpBlock[1]/cat" -> "59 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d";
"58 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "59 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d";
"59 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d" -> "60 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm";
"60 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm" -> "61 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU";
"61 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU" -> "63 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d";
"62 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "63 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d";
"63 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d" -> "64 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm";
"64 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm" -> "65 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU";
"65 UNet/ModuleList[up_path]/UNetUpBlock[1]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU" -> "67 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d";
"66 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "67 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d";
"67 UNet/ModuleList[up_path]/UNetUpBlock[2]/NNCFConvTranspose2d[up]/conv_transpose2d" -> "68 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat";
"68 UNet/ModuleList[up_path]/UNetUpBlock[2]/cat" -> "70 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d";
"69 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "70 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d";
"70 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d" -> "71 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm";
"71 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm" -> "72 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU";
"72 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU" -> "74 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d";
"73 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "74 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d";
"74 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d" -> "75 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm";
"75 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm" -> "76 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU";
"76 UNet/ModuleList[up_path]/UNetUpBlock[2]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU" -> "78 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d";
"77 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "78 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d";
"78 UNet/ModuleList[up_path]/UNetUpBlock[3]/NNCFConvTranspose2d[up]/conv_transpose2d" -> "79 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat";
"79 UNet/ModuleList[up_path]/UNetUpBlock[3]/cat" -> "81 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d";
"80 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "81 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d";
"81 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[0]/conv2d" -> "82 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm";
"82 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[1]/batch_norm" -> "83 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU";
"83 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[2]/RELU" -> "85 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d";
"84 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "85 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d";
"85 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/NNCFConv2d[3]/conv2d" -> "86 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm";
"86 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/BatchNorm2d[4]/batch_norm" -> "87 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU";
"87 UNet/ModuleList[up_path]/UNetUpBlock[3]/UNetConvBlock[conv_block]/Sequential[block]/ReLU[5]/RELU" -> "89 UNet/NNCFConv2d[last]/conv2d";
"88 UNet/NNCFConv2d[last]/ModuleDict[pre_ops]/UpdateWeight[0]/BinaryMask[op]/apply_binary_mask" -> "89 UNet/NNCFConv2d[last]/conv2d";
}
