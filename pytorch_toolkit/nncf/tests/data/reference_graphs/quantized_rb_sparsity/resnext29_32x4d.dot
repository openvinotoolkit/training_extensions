strict digraph  {
"0 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=0, scope="ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"1 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=1, scope="ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"2 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=2, scope="ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"3 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateInputs[2]/SymmetricQuantizer[op]/symmetric_quantize" [id=3, scope="ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateInputs[2]/SymmetricQuantizer[op]", type=symmetric_quantize];
"4 ResNeXt/NNCFConv2d[conv1]/conv2d" [id=4, scope="ResNeXt/NNCFConv2d[conv1]", type=conv2d];
"5 ResNeXt/BatchNorm2d[bn1]/batch_norm" [id=5, scope="ResNeXt/BatchNorm2d[bn1]", type=batch_norm];
"6 ResNeXt/RELU" [id=6, scope=ResNeXt, type=RELU];
"7 ResNeXt/SymmetricQuantizer/symmetric_quantize" [id=7, scope="ResNeXt/SymmetricQuantizer", type=symmetric_quantize];
"8 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=8, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"9 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=9, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"10 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=10, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"11 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/conv2d" [id=11, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]", type=conv2d];
"12 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn1]/batch_norm" [id=12, scope="ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn1]", type=batch_norm];
"13 ResNeXt/Sequential[layer1]/Block[0]/RELU" [id=13, scope="ResNeXt/Sequential[layer1]/Block[0]", type=RELU];
"14 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=14, scope="ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"15 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=15, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"16 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=16, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"17 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=17, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"18 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/conv2d" [id=18, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]", type=conv2d];
"19 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn2]/batch_norm" [id=19, scope="ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn2]", type=batch_norm];
"20 ResNeXt/Sequential[layer1]/Block[0]/RELU" [id=20, scope="ResNeXt/Sequential[layer1]/Block[0]", type=RELU];
"21 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=21, scope="ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"22 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=22, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"23 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=23, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"24 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=24, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"25 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/conv2d" [id=25, scope="ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]", type=conv2d];
"26 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/batch_norm" [id=26, scope="ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]", type=batch_norm];
"27 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=27, scope="ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"28 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=28, scope="ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"29 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=29, scope="ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"30 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=30, scope="ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"31 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" [id=31, scope="ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]", type=conv2d];
"32 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" [id=32, scope="ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]", type=batch_norm];
"33 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" [id=33, scope="ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer", type=symmetric_quantize];
"34 ResNeXt/Sequential[layer1]/Block[0]/__iadd__" [id=34, scope="ResNeXt/Sequential[layer1]/Block[0]", type=__iadd__];
"35 ResNeXt/Sequential[layer1]/Block[0]/RELU" [id=35, scope="ResNeXt/Sequential[layer1]/Block[0]", type=RELU];
"36 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=36, scope="ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"37 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=37, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"38 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=38, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"39 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=39, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"40 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/conv2d" [id=40, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]", type=conv2d];
"41 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn1]/batch_norm" [id=41, scope="ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn1]", type=batch_norm];
"42 ResNeXt/Sequential[layer1]/Block[1]/RELU" [id=42, scope="ResNeXt/Sequential[layer1]/Block[1]", type=RELU];
"43 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=43, scope="ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"44 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=44, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"45 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=45, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"46 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=46, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"47 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/conv2d" [id=47, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]", type=conv2d];
"48 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn2]/batch_norm" [id=48, scope="ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn2]", type=batch_norm];
"49 ResNeXt/Sequential[layer1]/Block[1]/RELU" [id=49, scope="ResNeXt/Sequential[layer1]/Block[1]", type=RELU];
"50 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=50, scope="ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"51 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=51, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"52 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=52, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"53 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=53, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"54 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/conv2d" [id=54, scope="ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]", type=conv2d];
"55 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/batch_norm" [id=55, scope="ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]", type=batch_norm];
"56 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=56, scope="ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"57 ResNeXt/Sequential[layer1]/Block[1]/__iadd__" [id=57, scope="ResNeXt/Sequential[layer1]/Block[1]", type=__iadd__];
"58 ResNeXt/Sequential[layer1]/Block[1]/RELU" [id=58, scope="ResNeXt/Sequential[layer1]/Block[1]", type=RELU];
"59 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=59, scope="ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"60 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=60, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"61 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=61, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"62 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=62, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"63 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/conv2d" [id=63, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]", type=conv2d];
"64 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn1]/batch_norm" [id=64, scope="ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn1]", type=batch_norm];
"65 ResNeXt/Sequential[layer1]/Block[2]/RELU" [id=65, scope="ResNeXt/Sequential[layer1]/Block[2]", type=RELU];
"66 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=66, scope="ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"67 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=67, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"68 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=68, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"69 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=69, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"70 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/conv2d" [id=70, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]", type=conv2d];
"71 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn2]/batch_norm" [id=71, scope="ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn2]", type=batch_norm];
"72 ResNeXt/Sequential[layer1]/Block[2]/RELU" [id=72, scope="ResNeXt/Sequential[layer1]/Block[2]", type=RELU];
"73 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=73, scope="ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"74 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=74, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"75 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=75, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"76 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=76, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"77 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/conv2d" [id=77, scope="ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]", type=conv2d];
"78 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/batch_norm" [id=78, scope="ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]", type=batch_norm];
"79 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=79, scope="ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"80 ResNeXt/Sequential[layer1]/Block[2]/__iadd__" [id=80, scope="ResNeXt/Sequential[layer1]/Block[2]", type=__iadd__];
"81 ResNeXt/Sequential[layer1]/Block[2]/RELU" [id=81, scope="ResNeXt/Sequential[layer1]/Block[2]", type=RELU];
"82 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=82, scope="ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"83 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=83, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"84 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=84, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"85 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=85, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"86 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/conv2d" [id=86, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]", type=conv2d];
"87 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn1]/batch_norm" [id=87, scope="ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn1]", type=batch_norm];
"88 ResNeXt/Sequential[layer2]/Block[0]/RELU" [id=88, scope="ResNeXt/Sequential[layer2]/Block[0]", type=RELU];
"89 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=89, scope="ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"90 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=90, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"91 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=91, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"92 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=92, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"93 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/conv2d" [id=93, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]", type=conv2d];
"94 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn2]/batch_norm" [id=94, scope="ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn2]", type=batch_norm];
"95 ResNeXt/Sequential[layer2]/Block[0]/RELU" [id=95, scope="ResNeXt/Sequential[layer2]/Block[0]", type=RELU];
"96 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=96, scope="ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"97 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=97, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"98 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=98, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"99 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=99, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"100 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/conv2d" [id=100, scope="ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]", type=conv2d];
"101 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/batch_norm" [id=101, scope="ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]", type=batch_norm];
"102 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=102, scope="ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"103 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=103, scope="ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"104 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=104, scope="ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"105 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=105, scope="ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"106 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" [id=106, scope="ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]", type=conv2d];
"107 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" [id=107, scope="ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]", type=batch_norm];
"108 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" [id=108, scope="ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer", type=symmetric_quantize];
"109 ResNeXt/Sequential[layer2]/Block[0]/__iadd__" [id=109, scope="ResNeXt/Sequential[layer2]/Block[0]", type=__iadd__];
"110 ResNeXt/Sequential[layer2]/Block[0]/RELU" [id=110, scope="ResNeXt/Sequential[layer2]/Block[0]", type=RELU];
"111 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=111, scope="ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"112 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=112, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"113 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=113, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"114 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=114, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"115 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/conv2d" [id=115, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]", type=conv2d];
"116 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn1]/batch_norm" [id=116, scope="ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn1]", type=batch_norm];
"117 ResNeXt/Sequential[layer2]/Block[1]/RELU" [id=117, scope="ResNeXt/Sequential[layer2]/Block[1]", type=RELU];
"118 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=118, scope="ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"119 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=119, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"120 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=120, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"121 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=121, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"122 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/conv2d" [id=122, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]", type=conv2d];
"123 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn2]/batch_norm" [id=123, scope="ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn2]", type=batch_norm];
"124 ResNeXt/Sequential[layer2]/Block[1]/RELU" [id=124, scope="ResNeXt/Sequential[layer2]/Block[1]", type=RELU];
"125 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=125, scope="ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"126 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=126, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"127 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=127, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"128 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=128, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"129 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/conv2d" [id=129, scope="ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]", type=conv2d];
"130 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/batch_norm" [id=130, scope="ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]", type=batch_norm];
"131 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=131, scope="ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"132 ResNeXt/Sequential[layer2]/Block[1]/__iadd__" [id=132, scope="ResNeXt/Sequential[layer2]/Block[1]", type=__iadd__];
"133 ResNeXt/Sequential[layer2]/Block[1]/RELU" [id=133, scope="ResNeXt/Sequential[layer2]/Block[1]", type=RELU];
"134 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=134, scope="ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"135 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=135, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"136 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=136, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"137 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=137, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"138 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/conv2d" [id=138, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]", type=conv2d];
"139 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn1]/batch_norm" [id=139, scope="ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn1]", type=batch_norm];
"140 ResNeXt/Sequential[layer2]/Block[2]/RELU" [id=140, scope="ResNeXt/Sequential[layer2]/Block[2]", type=RELU];
"141 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=141, scope="ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"142 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=142, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"143 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=143, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"144 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=144, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"145 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/conv2d" [id=145, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]", type=conv2d];
"146 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn2]/batch_norm" [id=146, scope="ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn2]", type=batch_norm];
"147 ResNeXt/Sequential[layer2]/Block[2]/RELU" [id=147, scope="ResNeXt/Sequential[layer2]/Block[2]", type=RELU];
"148 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=148, scope="ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"149 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=149, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"150 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=150, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"151 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=151, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"152 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/conv2d" [id=152, scope="ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]", type=conv2d];
"153 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/batch_norm" [id=153, scope="ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]", type=batch_norm];
"154 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=154, scope="ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"155 ResNeXt/Sequential[layer2]/Block[2]/__iadd__" [id=155, scope="ResNeXt/Sequential[layer2]/Block[2]", type=__iadd__];
"156 ResNeXt/Sequential[layer2]/Block[2]/RELU" [id=156, scope="ResNeXt/Sequential[layer2]/Block[2]", type=RELU];
"157 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=157, scope="ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"158 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=158, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"159 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=159, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"160 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=160, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"161 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/conv2d" [id=161, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]", type=conv2d];
"162 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn1]/batch_norm" [id=162, scope="ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn1]", type=batch_norm];
"163 ResNeXt/Sequential[layer3]/Block[0]/RELU" [id=163, scope="ResNeXt/Sequential[layer3]/Block[0]", type=RELU];
"164 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=164, scope="ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"165 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=165, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"166 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=166, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"167 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=167, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"168 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/conv2d" [id=168, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]", type=conv2d];
"169 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn2]/batch_norm" [id=169, scope="ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn2]", type=batch_norm];
"170 ResNeXt/Sequential[layer3]/Block[0]/RELU" [id=170, scope="ResNeXt/Sequential[layer3]/Block[0]", type=RELU];
"171 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=171, scope="ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"172 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=172, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"173 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=173, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"174 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=174, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"175 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/conv2d" [id=175, scope="ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]", type=conv2d];
"176 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/batch_norm" [id=176, scope="ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]", type=batch_norm];
"177 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=177, scope="ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"178 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=178, scope="ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"179 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=179, scope="ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"180 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=180, scope="ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"181 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" [id=181, scope="ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]", type=conv2d];
"182 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" [id=182, scope="ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]", type=batch_norm];
"183 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" [id=183, scope="ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer", type=symmetric_quantize];
"184 ResNeXt/Sequential[layer3]/Block[0]/__iadd__" [id=184, scope="ResNeXt/Sequential[layer3]/Block[0]", type=__iadd__];
"185 ResNeXt/Sequential[layer3]/Block[0]/RELU" [id=185, scope="ResNeXt/Sequential[layer3]/Block[0]", type=RELU];
"186 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" [id=186, scope="ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer", type=symmetric_quantize];
"187 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=187, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"188 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=188, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"189 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=189, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"190 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/conv2d" [id=190, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]", type=conv2d];
"191 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn1]/batch_norm" [id=191, scope="ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn1]", type=batch_norm];
"192 ResNeXt/Sequential[layer3]/Block[1]/RELU" [id=192, scope="ResNeXt/Sequential[layer3]/Block[1]", type=RELU];
"193 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=193, scope="ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"194 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=194, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"195 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=195, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"196 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=196, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"197 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/conv2d" [id=197, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]", type=conv2d];
"198 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn2]/batch_norm" [id=198, scope="ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn2]", type=batch_norm];
"199 ResNeXt/Sequential[layer3]/Block[1]/RELU" [id=199, scope="ResNeXt/Sequential[layer3]/Block[1]", type=RELU];
"200 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=200, scope="ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"201 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=201, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"202 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=202, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"203 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=203, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"204 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/conv2d" [id=204, scope="ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]", type=conv2d];
"205 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/batch_norm" [id=205, scope="ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]", type=batch_norm];
"206 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=206, scope="ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"207 ResNeXt/Sequential[layer3]/Block[1]/__iadd__" [id=207, scope="ResNeXt/Sequential[layer3]/Block[1]", type=__iadd__];
"208 ResNeXt/Sequential[layer3]/Block[1]/RELU" [id=208, scope="ResNeXt/Sequential[layer3]/Block[1]", type=RELU];
"209 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" [id=209, scope="ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer", type=symmetric_quantize];
"210 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=210, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"211 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=211, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"212 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=212, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"213 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/conv2d" [id=213, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]", type=conv2d];
"214 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn1]/batch_norm" [id=214, scope="ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn1]", type=batch_norm];
"215 ResNeXt/Sequential[layer3]/Block[2]/RELU" [id=215, scope="ResNeXt/Sequential[layer3]/Block[2]", type=RELU];
"216 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=216, scope="ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"217 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=217, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"218 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=218, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"219 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=219, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"220 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/conv2d" [id=220, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]", type=conv2d];
"221 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn2]/batch_norm" [id=221, scope="ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn2]", type=batch_norm];
"222 ResNeXt/Sequential[layer3]/Block[2]/RELU" [id=222, scope="ResNeXt/Sequential[layer3]/Block[2]", type=RELU];
"223 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=223, scope="ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"224 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=224, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"225 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=225, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"226 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=226, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"227 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/conv2d" [id=227, scope="ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]", type=conv2d];
"228 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/batch_norm" [id=228, scope="ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]", type=batch_norm];
"229 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" [id=229, scope="ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer", type=symmetric_quantize];
"230 ResNeXt/Sequential[layer3]/Block[2]/__iadd__" [id=230, scope="ResNeXt/Sequential[layer3]/Block[2]", type=__iadd__];
"231 ResNeXt/Sequential[layer3]/Block[2]/RELU" [id=231, scope="ResNeXt/Sequential[layer3]/Block[2]", type=RELU];
"232 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" [id=232, scope="ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer", type=symmetric_quantize];
"233 ResNeXt/avg_pool2d" [id=233, scope=ResNeXt, type=avg_pool2d];
"234 ResNeXt/SymmetricQuantizer/symmetric_quantize" [id=234, scope="ResNeXt/SymmetricQuantizer", type=symmetric_quantize];
"235 ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=235, scope="ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"236 ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=236, scope="ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"237 ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=237, scope="ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"238 ResNeXt/NNCFLinear[linear]/linear" [id=238, scope="ResNeXt/NNCFLinear[linear]", type=linear];
"0 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "1 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"1 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "2 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"2 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "4 ResNeXt/NNCFConv2d[conv1]/conv2d";
"3 ResNeXt/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateInputs[2]/SymmetricQuantizer[op]/symmetric_quantize" -> "4 ResNeXt/NNCFConv2d[conv1]/conv2d";
"4 ResNeXt/NNCFConv2d[conv1]/conv2d" -> "5 ResNeXt/BatchNorm2d[bn1]/batch_norm";
"5 ResNeXt/BatchNorm2d[bn1]/batch_norm" -> "6 ResNeXt/RELU";
"6 ResNeXt/RELU" -> "7 ResNeXt/SymmetricQuantizer/symmetric_quantize";
"8 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "9 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"7 ResNeXt/SymmetricQuantizer/symmetric_quantize" -> "11 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/conv2d";
"7 ResNeXt/SymmetricQuantizer/symmetric_quantize" -> "31 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"9 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "10 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"10 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "11 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/conv2d";
"11 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv1]/conv2d" -> "12 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn1]/batch_norm";
"12 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn1]/batch_norm" -> "13 ResNeXt/Sequential[layer1]/Block[0]/RELU";
"13 ResNeXt/Sequential[layer1]/Block[0]/RELU" -> "14 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"14 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "18 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/conv2d";
"15 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "16 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"16 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "17 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"17 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "18 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/conv2d";
"18 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv2]/conv2d" -> "19 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn2]/batch_norm";
"19 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn2]/batch_norm" -> "20 ResNeXt/Sequential[layer1]/Block[0]/RELU";
"20 ResNeXt/Sequential[layer1]/Block[0]/RELU" -> "21 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"21 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "25 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/conv2d";
"22 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "23 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"23 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "24 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"24 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "25 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/conv2d";
"25 ResNeXt/Sequential[layer1]/Block[0]/NNCFConv2d[conv3]/conv2d" -> "26 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/batch_norm";
"26 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/batch_norm" -> "27 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"27 ResNeXt/Sequential[layer1]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "34 ResNeXt/Sequential[layer1]/Block[0]/__iadd__";
"28 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "29 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"29 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "30 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"30 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "31 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"31 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" -> "32 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm";
"32 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" -> "33 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize";
"33 ResNeXt/Sequential[layer1]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" -> "34 ResNeXt/Sequential[layer1]/Block[0]/__iadd__";
"34 ResNeXt/Sequential[layer1]/Block[0]/__iadd__" -> "35 ResNeXt/Sequential[layer1]/Block[0]/RELU";
"35 ResNeXt/Sequential[layer1]/Block[0]/RELU" -> "36 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"36 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "40 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/conv2d";
"36 ResNeXt/Sequential[layer1]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "57 ResNeXt/Sequential[layer1]/Block[1]/__iadd__";
"37 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "38 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"38 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "39 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"39 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "40 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/conv2d";
"40 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv1]/conv2d" -> "41 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn1]/batch_norm";
"41 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn1]/batch_norm" -> "42 ResNeXt/Sequential[layer1]/Block[1]/RELU";
"42 ResNeXt/Sequential[layer1]/Block[1]/RELU" -> "43 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"43 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "47 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/conv2d";
"44 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "45 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"45 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "46 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"46 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "47 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/conv2d";
"47 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv2]/conv2d" -> "48 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn2]/batch_norm";
"48 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn2]/batch_norm" -> "49 ResNeXt/Sequential[layer1]/Block[1]/RELU";
"49 ResNeXt/Sequential[layer1]/Block[1]/RELU" -> "50 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"50 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "54 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/conv2d";
"51 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "52 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"52 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "53 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"53 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "54 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/conv2d";
"54 ResNeXt/Sequential[layer1]/Block[1]/NNCFConv2d[conv3]/conv2d" -> "55 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/batch_norm";
"55 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/batch_norm" -> "56 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"56 ResNeXt/Sequential[layer1]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "57 ResNeXt/Sequential[layer1]/Block[1]/__iadd__";
"57 ResNeXt/Sequential[layer1]/Block[1]/__iadd__" -> "58 ResNeXt/Sequential[layer1]/Block[1]/RELU";
"58 ResNeXt/Sequential[layer1]/Block[1]/RELU" -> "59 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"59 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "63 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/conv2d";
"59 ResNeXt/Sequential[layer1]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "80 ResNeXt/Sequential[layer1]/Block[2]/__iadd__";
"60 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "61 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"61 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "62 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"62 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "63 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/conv2d";
"63 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv1]/conv2d" -> "64 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn1]/batch_norm";
"64 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn1]/batch_norm" -> "65 ResNeXt/Sequential[layer1]/Block[2]/RELU";
"65 ResNeXt/Sequential[layer1]/Block[2]/RELU" -> "66 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"66 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "70 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/conv2d";
"67 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "68 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"68 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "69 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"69 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "70 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/conv2d";
"70 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv2]/conv2d" -> "71 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn2]/batch_norm";
"71 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn2]/batch_norm" -> "72 ResNeXt/Sequential[layer1]/Block[2]/RELU";
"72 ResNeXt/Sequential[layer1]/Block[2]/RELU" -> "73 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"73 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "77 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/conv2d";
"74 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "75 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"75 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "76 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"76 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "77 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/conv2d";
"77 ResNeXt/Sequential[layer1]/Block[2]/NNCFConv2d[conv3]/conv2d" -> "78 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/batch_norm";
"78 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/batch_norm" -> "79 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"79 ResNeXt/Sequential[layer1]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "80 ResNeXt/Sequential[layer1]/Block[2]/__iadd__";
"80 ResNeXt/Sequential[layer1]/Block[2]/__iadd__" -> "81 ResNeXt/Sequential[layer1]/Block[2]/RELU";
"81 ResNeXt/Sequential[layer1]/Block[2]/RELU" -> "82 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"82 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "86 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/conv2d";
"83 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "84 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"84 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "85 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"85 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "86 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/conv2d";
"86 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv1]/conv2d" -> "87 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn1]/batch_norm";
"87 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn1]/batch_norm" -> "88 ResNeXt/Sequential[layer2]/Block[0]/RELU";
"88 ResNeXt/Sequential[layer2]/Block[0]/RELU" -> "89 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"89 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "93 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/conv2d";
"90 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "91 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"91 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "92 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"92 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "93 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/conv2d";
"93 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv2]/conv2d" -> "94 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn2]/batch_norm";
"94 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn2]/batch_norm" -> "95 ResNeXt/Sequential[layer2]/Block[0]/RELU";
"95 ResNeXt/Sequential[layer2]/Block[0]/RELU" -> "96 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"97 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "98 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"98 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "99 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"82 ResNeXt/Sequential[layer1]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "106 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"96 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "100 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/conv2d";
"99 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "100 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/conv2d";
"100 ResNeXt/Sequential[layer2]/Block[0]/NNCFConv2d[conv3]/conv2d" -> "101 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/batch_norm";
"101 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/batch_norm" -> "102 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"102 ResNeXt/Sequential[layer2]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "109 ResNeXt/Sequential[layer2]/Block[0]/__iadd__";
"103 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "104 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"104 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "105 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"105 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "106 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"106 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" -> "107 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm";
"107 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" -> "108 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize";
"108 ResNeXt/Sequential[layer2]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" -> "109 ResNeXt/Sequential[layer2]/Block[0]/__iadd__";
"109 ResNeXt/Sequential[layer2]/Block[0]/__iadd__" -> "110 ResNeXt/Sequential[layer2]/Block[0]/RELU";
"110 ResNeXt/Sequential[layer2]/Block[0]/RELU" -> "111 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"111 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "115 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/conv2d";
"111 ResNeXt/Sequential[layer2]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "132 ResNeXt/Sequential[layer2]/Block[1]/__iadd__";
"112 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "113 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"113 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "114 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"114 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "115 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/conv2d";
"115 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv1]/conv2d" -> "116 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn1]/batch_norm";
"116 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn1]/batch_norm" -> "117 ResNeXt/Sequential[layer2]/Block[1]/RELU";
"117 ResNeXt/Sequential[layer2]/Block[1]/RELU" -> "118 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"118 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "122 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/conv2d";
"119 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "120 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"120 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "121 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"121 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "122 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/conv2d";
"122 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv2]/conv2d" -> "123 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn2]/batch_norm";
"123 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn2]/batch_norm" -> "124 ResNeXt/Sequential[layer2]/Block[1]/RELU";
"124 ResNeXt/Sequential[layer2]/Block[1]/RELU" -> "125 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"125 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "129 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/conv2d";
"126 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "127 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"127 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "128 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"128 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "129 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/conv2d";
"129 ResNeXt/Sequential[layer2]/Block[1]/NNCFConv2d[conv3]/conv2d" -> "130 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/batch_norm";
"130 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/batch_norm" -> "131 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"131 ResNeXt/Sequential[layer2]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "132 ResNeXt/Sequential[layer2]/Block[1]/__iadd__";
"132 ResNeXt/Sequential[layer2]/Block[1]/__iadd__" -> "133 ResNeXt/Sequential[layer2]/Block[1]/RELU";
"133 ResNeXt/Sequential[layer2]/Block[1]/RELU" -> "134 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"134 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "138 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/conv2d";
"134 ResNeXt/Sequential[layer2]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "155 ResNeXt/Sequential[layer2]/Block[2]/__iadd__";
"135 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "136 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"136 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "137 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"137 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "138 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/conv2d";
"138 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv1]/conv2d" -> "139 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn1]/batch_norm";
"139 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn1]/batch_norm" -> "140 ResNeXt/Sequential[layer2]/Block[2]/RELU";
"140 ResNeXt/Sequential[layer2]/Block[2]/RELU" -> "141 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"141 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "145 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/conv2d";
"142 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "143 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"143 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "144 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"144 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "145 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/conv2d";
"145 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv2]/conv2d" -> "146 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn2]/batch_norm";
"146 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn2]/batch_norm" -> "147 ResNeXt/Sequential[layer2]/Block[2]/RELU";
"147 ResNeXt/Sequential[layer2]/Block[2]/RELU" -> "148 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"148 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "152 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/conv2d";
"149 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "150 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"150 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "151 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"151 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "152 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/conv2d";
"152 ResNeXt/Sequential[layer2]/Block[2]/NNCFConv2d[conv3]/conv2d" -> "153 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/batch_norm";
"153 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/batch_norm" -> "154 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"154 ResNeXt/Sequential[layer2]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "155 ResNeXt/Sequential[layer2]/Block[2]/__iadd__";
"155 ResNeXt/Sequential[layer2]/Block[2]/__iadd__" -> "156 ResNeXt/Sequential[layer2]/Block[2]/RELU";
"156 ResNeXt/Sequential[layer2]/Block[2]/RELU" -> "157 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"157 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "161 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/conv2d";
"157 ResNeXt/Sequential[layer2]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "181 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"158 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "159 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"159 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "160 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"160 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "161 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/conv2d";
"161 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv1]/conv2d" -> "162 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn1]/batch_norm";
"162 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn1]/batch_norm" -> "163 ResNeXt/Sequential[layer3]/Block[0]/RELU";
"163 ResNeXt/Sequential[layer3]/Block[0]/RELU" -> "164 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"164 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "168 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/conv2d";
"165 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "166 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"166 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "167 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"167 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "168 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/conv2d";
"168 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv2]/conv2d" -> "169 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn2]/batch_norm";
"169 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn2]/batch_norm" -> "170 ResNeXt/Sequential[layer3]/Block[0]/RELU";
"170 ResNeXt/Sequential[layer3]/Block[0]/RELU" -> "171 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"171 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "175 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/conv2d";
"172 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "173 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"173 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "174 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"174 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "175 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/conv2d";
"175 ResNeXt/Sequential[layer3]/Block[0]/NNCFConv2d[conv3]/conv2d" -> "176 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/batch_norm";
"176 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/batch_norm" -> "177 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"177 ResNeXt/Sequential[layer3]/Block[0]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "184 ResNeXt/Sequential[layer3]/Block[0]/__iadd__";
"178 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "179 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"179 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "180 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"180 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "181 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d";
"181 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/NNCFConv2d[0]/conv2d" -> "182 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm";
"182 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/batch_norm" -> "183 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize";
"183 ResNeXt/Sequential[layer3]/Block[0]/Sequential[shortcut]/BatchNorm2d[1]/SymmetricQuantizer/symmetric_quantize" -> "184 ResNeXt/Sequential[layer3]/Block[0]/__iadd__";
"184 ResNeXt/Sequential[layer3]/Block[0]/__iadd__" -> "185 ResNeXt/Sequential[layer3]/Block[0]/RELU";
"185 ResNeXt/Sequential[layer3]/Block[0]/RELU" -> "186 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize";
"186 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "190 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/conv2d";
"186 ResNeXt/Sequential[layer3]/Block[0]/SymmetricQuantizer/symmetric_quantize" -> "207 ResNeXt/Sequential[layer3]/Block[1]/__iadd__";
"187 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "188 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"188 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "189 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"189 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "190 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/conv2d";
"190 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv1]/conv2d" -> "191 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn1]/batch_norm";
"191 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn1]/batch_norm" -> "192 ResNeXt/Sequential[layer3]/Block[1]/RELU";
"192 ResNeXt/Sequential[layer3]/Block[1]/RELU" -> "193 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"193 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "197 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/conv2d";
"194 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "195 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"195 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "196 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"196 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "197 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/conv2d";
"197 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv2]/conv2d" -> "198 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn2]/batch_norm";
"198 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn2]/batch_norm" -> "199 ResNeXt/Sequential[layer3]/Block[1]/RELU";
"199 ResNeXt/Sequential[layer3]/Block[1]/RELU" -> "200 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"200 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "204 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/conv2d";
"201 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "202 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"202 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "203 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"203 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "204 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/conv2d";
"204 ResNeXt/Sequential[layer3]/Block[1]/NNCFConv2d[conv3]/conv2d" -> "205 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/batch_norm";
"205 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/batch_norm" -> "206 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"206 ResNeXt/Sequential[layer3]/Block[1]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "207 ResNeXt/Sequential[layer3]/Block[1]/__iadd__";
"207 ResNeXt/Sequential[layer3]/Block[1]/__iadd__" -> "208 ResNeXt/Sequential[layer3]/Block[1]/RELU";
"208 ResNeXt/Sequential[layer3]/Block[1]/RELU" -> "209 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize";
"209 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "213 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/conv2d";
"209 ResNeXt/Sequential[layer3]/Block[1]/SymmetricQuantizer/symmetric_quantize" -> "230 ResNeXt/Sequential[layer3]/Block[2]/__iadd__";
"210 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "211 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"211 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "212 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"212 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "213 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/conv2d";
"213 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv1]/conv2d" -> "214 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn1]/batch_norm";
"214 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn1]/batch_norm" -> "215 ResNeXt/Sequential[layer3]/Block[2]/RELU";
"215 ResNeXt/Sequential[layer3]/Block[2]/RELU" -> "216 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"216 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "220 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/conv2d";
"217 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "218 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"218 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "219 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"219 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "220 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/conv2d";
"220 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv2]/conv2d" -> "221 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn2]/batch_norm";
"221 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn2]/batch_norm" -> "222 ResNeXt/Sequential[layer3]/Block[2]/RELU";
"222 ResNeXt/Sequential[layer3]/Block[2]/RELU" -> "223 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"223 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "227 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/conv2d";
"224 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "225 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"225 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "226 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"226 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "227 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/conv2d";
"227 ResNeXt/Sequential[layer3]/Block[2]/NNCFConv2d[conv3]/conv2d" -> "228 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/batch_norm";
"228 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/batch_norm" -> "229 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize";
"229 ResNeXt/Sequential[layer3]/Block[2]/BatchNorm2d[bn3]/SymmetricQuantizer/symmetric_quantize" -> "230 ResNeXt/Sequential[layer3]/Block[2]/__iadd__";
"230 ResNeXt/Sequential[layer3]/Block[2]/__iadd__" -> "231 ResNeXt/Sequential[layer3]/Block[2]/RELU";
"231 ResNeXt/Sequential[layer3]/Block[2]/RELU" -> "232 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize";
"232 ResNeXt/Sequential[layer3]/Block[2]/SymmetricQuantizer/symmetric_quantize" -> "233 ResNeXt/avg_pool2d";
"233 ResNeXt/avg_pool2d" -> "234 ResNeXt/SymmetricQuantizer/symmetric_quantize";
"234 ResNeXt/SymmetricQuantizer/symmetric_quantize" -> "238 ResNeXt/NNCFLinear[linear]/linear";
"235 ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "236 ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"236 ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "237 ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"237 ResNeXt/NNCFLinear[linear]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "238 ResNeXt/NNCFLinear[linear]/linear";
}
