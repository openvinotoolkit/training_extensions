strict digraph  {
"0 GNMT/ResidualRecurrentEncoder[encoder]/Embedding[embedder]/embedding" [id=0, scope="GNMT/ResidualRecurrentEncoder[encoder]/Embedding[embedder]", type=embedding];
"1 GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]/dropout" [id=1, scope="GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]", type=dropout];
"2 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=2, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"3 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=3, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"4 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=4, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"5 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=5, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"6 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=6, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"7 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=7, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"8 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=8, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"9 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=9, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"10 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=10, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"11 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=11, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"12 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=12, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"13 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=13, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"14 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=14, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"15 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=15, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"16 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=16, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"17 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=17, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"18 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=18, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"19 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=19, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"20 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=20, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"21 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/cat" [id=21, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]", type=cat];
"22 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/cat" [id=22, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]", type=cat];
"23 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/cat" [id=23, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]", type=cat];
"24 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=24, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"25 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=25, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"26 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=26, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"27 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=27, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"28 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=28, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"29 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=29, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"30 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__add__" [id=30, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]", type=__add__];
"31 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=31, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"32 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=32, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"33 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=33, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"34 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/tanh" [id=34, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]", type=tanh];
"35 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=35, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"36 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=36, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"37 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=37, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"38 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__add__" [id=38, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]", type=__add__];
"39 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=39, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"40 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/tanh" [id=40, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]", type=tanh];
"41 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=41, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"42 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=42, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"43 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/ReverseResetPoint/cat" [id=43, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/ReverseResetPoint", type=cat];
"44 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/ReverseResetPoint/cat" [id=44, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/ReverseResetPoint", type=cat];
"45 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/cat" [id=45, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]", type=cat];
"46 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=46, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"47 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/cat" [id=47, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]", type=cat];
"48 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/cat" [id=48, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]", type=cat];
"49 GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]/dropout" [id=49, scope="GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]", type=dropout];
"50 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=50, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"51 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=51, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"52 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=52, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"53 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=53, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"54 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=54, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"55 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=55, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"56 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=56, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"57 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=57, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"58 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=58, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"59 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=59, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"60 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=60, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"61 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=61, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"62 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=62, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"63 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=63, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"64 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=64, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"65 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=65, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"66 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=66, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"67 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=67, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"68 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=68, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"69 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" [id=69, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]", type=cat];
"70 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=70, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"71 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/cat" [id=71, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]", type=cat];
"72 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/cat" [id=72, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]", type=cat];
"73 GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]/dropout" [id=73, scope="GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]", type=dropout];
"74 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=74, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"75 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=75, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"76 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=76, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"77 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=77, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"78 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=78, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"79 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=79, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"80 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=80, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"81 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=81, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"82 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=82, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"83 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=83, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"84 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=84, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"85 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=85, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"86 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=86, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"87 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=87, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"88 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=88, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"89 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=89, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"90 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=90, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"91 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=91, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"92 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" [id=92, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]", type=cat];
"93 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=93, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"94 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/cat" [id=94, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]", type=cat];
"95 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/cat" [id=95, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]", type=cat];
"96 GNMT/ResidualRecurrentEncoder[encoder]/__add__" [id=96, scope="GNMT/ResidualRecurrentEncoder[encoder]", type=__add__];
"97 GNMT/ResidualRecurrentEncoder[encoder]/AsymmetricQuantizer/asymmetric_quantize" [id=97, scope="GNMT/ResidualRecurrentEncoder[encoder]/AsymmetricQuantizer", type=asymmetric_quantize];
"98 GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]/dropout" [id=98, scope="GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]", type=dropout];
"99 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=99, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"100 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=100, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"101 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=101, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"102 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=102, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"103 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=103, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"104 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=104, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"105 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=105, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"106 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=106, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"107 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=107, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"108 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=108, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"109 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=109, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"110 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=110, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"111 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=111, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"112 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=112, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"113 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=113, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"114 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=114, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"115 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=115, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"116 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=116, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"117 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" [id=117, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]", type=cat];
"118 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=118, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"119 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/cat" [id=119, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]", type=cat];
"120 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/cat" [id=120, scope="GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]", type=cat];
"121 GNMT/ResidualRecurrentEncoder[encoder]/__add__" [id=121, scope="GNMT/ResidualRecurrentEncoder[encoder]", type=__add__];
"122 GNMT/ResidualRecurrentEncoder[encoder]/AsymmetricQuantizer/asymmetric_quantize" [id=122, scope="GNMT/ResidualRecurrentEncoder[encoder]/AsymmetricQuantizer", type=asymmetric_quantize];
"123 GNMT/ResidualRecurrentDecoder[decoder]/Embedding[embedder]/embedding" [id=123, scope="GNMT/ResidualRecurrentDecoder[decoder]/Embedding[embedder]", type=embedding];
"124 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/arange" [id=124, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]", type=arange];
"125 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/Dropout[dropout]/dropout" [id=125, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/Dropout[dropout]", type=dropout];
"126 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=126, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"127 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=127, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"128 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=128, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"129 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=129, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"130 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=130, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"131 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=131, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"132 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=132, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"133 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=133, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"134 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=134, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"135 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=135, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"136 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=136, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"137 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=137, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"138 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=138, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"139 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=139, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"140 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=140, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"141 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=141, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"142 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=142, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"143 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=143, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"144 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=144, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"145 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" [id=145, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]", type=cat];
"146 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=146, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"147 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/cat" [id=147, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]", type=cat];
"148 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/cat" [id=148, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]", type=cat];
"149 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_q]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=149, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_q]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"150 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_q]/linear" [id=150, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_q]", type=linear];
"151 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_k]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=151, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_k]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"152 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_k]/linear" [id=152, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_k]", type=linear];
"153 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/__add__" [id=153, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]", type=__add__];
"154 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer/asymmetric_quantize" [id=154, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer", type=asymmetric_quantize];
"155 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/tanh" [id=155, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]", type=tanh];
"156 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/matmul" [id=156, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]", type=matmul];
"157 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer/asymmetric_quantize" [id=157, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer", type=asymmetric_quantize];
"158 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/softmax" [id=158, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]", type=softmax];
"159 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/bmm" [id=159, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]", type=bmm];
"160 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer/asymmetric_quantize" [id=160, scope="GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer", type=asymmetric_quantize];
"161 GNMT/ResidualRecurrentDecoder[decoder]/cat" [id=161, scope="GNMT/ResidualRecurrentDecoder[decoder]", type=cat];
"162 GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]/dropout" [id=162, scope="GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]", type=dropout];
"163 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=163, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"164 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=164, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"165 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=165, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"166 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=166, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"167 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=167, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"168 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=168, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"169 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=169, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"170 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=170, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"171 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=171, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"172 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=172, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"173 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=173, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"174 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=174, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"175 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=175, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"176 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=176, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"177 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=177, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"178 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=178, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"179 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=179, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"180 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=180, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"181 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" [id=181, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]", type=cat];
"182 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=182, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"183 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/cat" [id=183, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]", type=cat];
"184 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/cat" [id=184, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]", type=cat];
"185 GNMT/ResidualRecurrentDecoder[decoder]/cat" [id=185, scope="GNMT/ResidualRecurrentDecoder[decoder]", type=cat];
"186 GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]/dropout" [id=186, scope="GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]", type=dropout];
"187 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=187, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"188 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=188, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"189 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=189, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"190 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=190, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"191 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=191, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"192 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=192, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"193 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=193, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"194 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=194, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"195 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=195, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"196 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=196, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"197 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=197, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"198 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=198, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"199 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=199, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"200 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=200, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"201 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=201, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"202 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=202, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"203 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=203, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"204 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=204, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"205 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" [id=205, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]", type=cat];
"206 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=206, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"207 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/cat" [id=207, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]", type=cat];
"208 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/cat" [id=208, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]", type=cat];
"209 GNMT/ResidualRecurrentDecoder[decoder]/__add__" [id=209, scope="GNMT/ResidualRecurrentDecoder[decoder]", type=__add__];
"210 GNMT/ResidualRecurrentDecoder[decoder]/AsymmetricQuantizer/asymmetric_quantize" [id=210, scope="GNMT/ResidualRecurrentDecoder[decoder]/AsymmetricQuantizer", type=asymmetric_quantize];
"211 GNMT/ResidualRecurrentDecoder[decoder]/cat" [id=211, scope="GNMT/ResidualRecurrentDecoder[decoder]", type=cat];
"212 GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]/dropout" [id=212, scope="GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]", type=dropout];
"213 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=213, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"214 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=214, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"215 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=215, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"216 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=216, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"217 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=217, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"218 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=218, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"219 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=219, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"220 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=220, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"221 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=221, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"222 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=222, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"223 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=223, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"224 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=224, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"225 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=225, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"226 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=226, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"227 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=227, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"228 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=228, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"229 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=229, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"230 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=230, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"231 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" [id=231, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]", type=cat];
"232 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=232, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"233 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/cat" [id=233, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]", type=cat];
"234 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/cat" [id=234, scope="GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]", type=cat];
"235 GNMT/ResidualRecurrentDecoder[decoder]/__add__" [id=235, scope="GNMT/ResidualRecurrentDecoder[decoder]", type=__add__];
"236 GNMT/ResidualRecurrentDecoder[decoder]/AsymmetricQuantizer/asymmetric_quantize" [id=236, scope="GNMT/ResidualRecurrentDecoder[decoder]/AsymmetricQuantizer", type=asymmetric_quantize];
"237 GNMT/ResidualRecurrentDecoder[decoder]/Classifier[classifier]/NNCFLinear[classifier]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=237, scope="GNMT/ResidualRecurrentDecoder[decoder]/Classifier[classifier]/NNCFLinear[classifier]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"238 GNMT/ResidualRecurrentDecoder[decoder]/Classifier[classifier]/NNCFLinear[classifier]/linear" [id=238, scope="GNMT/ResidualRecurrentDecoder[decoder]/Classifier[classifier]/NNCFLinear[classifier]", type=linear];
"0 GNMT/ResidualRecurrentEncoder[encoder]/Embedding[embedder]/embedding" -> "1 GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]/dropout";
"2 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "4 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"3 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "4 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"4 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "8 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"5 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "7 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"6 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "7 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"7 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "8 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"8 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "9 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"9 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "10 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"9 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "11 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"9 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "12 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"9 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "13 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"10 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "15 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"11 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "14 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"12 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "15 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"13 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "19 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"14 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "16 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"15 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "16 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"16 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "17 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"17 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "18 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"17 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "22 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/cat";
"18 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "19 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"19 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "20 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"20 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "21 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/cat";
"20 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "23 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/cat";
"21 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/cat" -> "47 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/cat";
"22 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/cat" -> "48 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/cat";
"23 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrent[0]/cat" -> "46 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"24 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "26 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"25 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "26 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"26 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "30 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__add__";
"27 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "29 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"28 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "29 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"29 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "30 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__add__";
"30 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__add__" -> "31 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"31 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "32 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"31 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "33 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"31 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "34 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/tanh";
"31 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "35 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"32 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "37 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__mul__";
"33 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "36 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__mul__";
"34 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/tanh" -> "37 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__mul__";
"35 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "41 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__mul__";
"36 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "38 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__add__";
"37 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "38 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__add__";
"38 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__add__" -> "39 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"39 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "40 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/tanh";
"39 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "44 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/ReverseResetPoint/cat";
"39 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "48 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/cat";
"40 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/tanh" -> "41 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__mul__";
"41 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "42 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"42 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "43 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/ReverseResetPoint/cat";
"42 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "45 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/cat";
"42 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "47 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/cat";
"45 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/VariableRecurrentReverse[1]/cat" -> "46 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"49 GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]/dropout" -> "51 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize";
"50 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "52 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"51 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "52 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"52 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "56 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"53 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "55 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"54 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "55 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"55 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "56 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"56 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "57 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"57 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "58 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"57 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "59 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"57 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "60 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"57 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "61 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"58 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "63 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"59 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "62 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"60 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "63 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"61 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "67 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"62 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "64 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"63 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "64 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"64 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "65 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"65 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "66 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"65 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "72 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/cat";
"66 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "67 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"67 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "68 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"68 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "69 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat";
"68 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "71 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/cat";
"69 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" -> "70 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"70 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "73 GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]/dropout";
"70 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "96 GNMT/ResidualRecurrentEncoder[encoder]/__add__";
"73 GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]/dropout" -> "75 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"74 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "75 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"75 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "79 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"76 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "78 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"77 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "78 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"78 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "79 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"79 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "80 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"80 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "81 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"80 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "82 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"80 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "83 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"80 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "84 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"81 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "86 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"82 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "85 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"83 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "86 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"84 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "90 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"85 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "87 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"86 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "87 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"87 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "88 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"88 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "89 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"88 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "95 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/cat";
"89 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "90 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"90 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "91 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"91 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "92 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat";
"91 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "94 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/cat";
"92 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" -> "93 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"93 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "96 GNMT/ResidualRecurrentEncoder[encoder]/__add__";
"96 GNMT/ResidualRecurrentEncoder[encoder]/__add__" -> "97 GNMT/ResidualRecurrentEncoder[encoder]/AsymmetricQuantizer/asymmetric_quantize";
"97 GNMT/ResidualRecurrentEncoder[encoder]/AsymmetricQuantizer/asymmetric_quantize" -> "98 GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]/dropout";
"97 GNMT/ResidualRecurrentEncoder[encoder]/AsymmetricQuantizer/asymmetric_quantize" -> "121 GNMT/ResidualRecurrentEncoder[encoder]/__add__";
"98 GNMT/ResidualRecurrentEncoder[encoder]/Dropout[dropout]/dropout" -> "100 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"99 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "100 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"100 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "104 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"101 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "103 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"102 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "103 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"103 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "104 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"104 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "105 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"105 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "106 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"105 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "107 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"105 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "108 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"105 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "109 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"106 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "111 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"107 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "110 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"108 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "111 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"109 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "115 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"110 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "112 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"111 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "112 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"112 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "113 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"113 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "114 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"113 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "120 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/cat";
"114 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "115 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"115 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "116 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"116 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "117 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat";
"116 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "119 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/cat";
"117 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" -> "118 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"118 GNMT/ResidualRecurrentEncoder[encoder]/ModuleList[rnn_layers]/NNCF_RNN[3]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "121 GNMT/ResidualRecurrentEncoder[encoder]/__add__";
"121 GNMT/ResidualRecurrentEncoder[encoder]/__add__" -> "122 GNMT/ResidualRecurrentEncoder[encoder]/AsymmetricQuantizer/asymmetric_quantize";
"122 GNMT/ResidualRecurrentEncoder[encoder]/AsymmetricQuantizer/asymmetric_quantize" -> "152 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_k]/linear";
"122 GNMT/ResidualRecurrentEncoder[encoder]/AsymmetricQuantizer/asymmetric_quantize" -> "159 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/bmm";
"123 GNMT/ResidualRecurrentDecoder[decoder]/Embedding[embedder]/embedding" -> "125 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/Dropout[dropout]/dropout";
"125 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/Dropout[dropout]/dropout" -> "127 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize";
"126 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "128 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"127 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "128 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"128 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "132 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"129 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "131 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"130 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "131 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"131 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "132 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"132 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "133 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"133 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "134 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"133 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "135 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"133 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "136 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"133 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "137 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"134 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "139 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"135 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "138 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"136 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "139 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"137 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "143 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"138 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "140 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"139 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "140 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"140 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "141 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"141 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "142 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"141 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "148 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/cat";
"142 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "143 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"143 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "144 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"144 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "145 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat";
"144 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "147 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/cat";
"145 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" -> "146 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"146 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "150 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_q]/linear";
"146 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/NNCF_RNN[rnn]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "161 GNMT/ResidualRecurrentDecoder[decoder]/cat";
"149 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_q]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "150 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_q]/linear";
"150 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_q]/linear" -> "153 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/__add__";
"151 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_k]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "152 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_k]/linear";
"152 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/NNCFLinear[linear_k]/linear" -> "153 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/__add__";
"153 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/__add__" -> "154 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer/asymmetric_quantize";
"154 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer/asymmetric_quantize" -> "155 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/tanh";
"155 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/tanh" -> "156 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/matmul";
"156 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/matmul" -> "157 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer/asymmetric_quantize";
"157 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer/asymmetric_quantize" -> "158 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/softmax";
"158 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/softmax" -> "159 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/bmm";
"159 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/bmm" -> "160 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer/asymmetric_quantize";
"160 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer/asymmetric_quantize" -> "161 GNMT/ResidualRecurrentDecoder[decoder]/cat";
"160 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer/asymmetric_quantize" -> "185 GNMT/ResidualRecurrentDecoder[decoder]/cat";
"160 GNMT/ResidualRecurrentDecoder[decoder]/RecurrentAttention[att_rnn]/BahdanauAttention[attn]/AsymmetricQuantizer/asymmetric_quantize" -> "211 GNMT/ResidualRecurrentDecoder[decoder]/cat";
"161 GNMT/ResidualRecurrentDecoder[decoder]/cat" -> "162 GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]/dropout";
"162 GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]/dropout" -> "164 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"163 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "164 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"164 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "168 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"165 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "167 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"166 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "167 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"167 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "168 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"168 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "169 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"169 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "170 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"169 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "171 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"169 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "172 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"169 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "173 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"170 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "175 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"171 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "174 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"172 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "175 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"173 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "179 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"174 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "176 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"175 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "176 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"176 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "177 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"177 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "178 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"177 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "184 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/cat";
"178 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "179 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"179 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "180 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"180 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "181 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat";
"180 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "183 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/cat";
"181 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" -> "182 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"182 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "185 GNMT/ResidualRecurrentDecoder[decoder]/cat";
"182 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[0]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "209 GNMT/ResidualRecurrentDecoder[decoder]/__add__";
"185 GNMT/ResidualRecurrentDecoder[decoder]/cat" -> "186 GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]/dropout";
"186 GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]/dropout" -> "188 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"187 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "188 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"188 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "192 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"189 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "191 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"190 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "191 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"191 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "192 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"192 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "193 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"193 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "194 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"193 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "195 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"193 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "196 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"193 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "197 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"194 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "199 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"195 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "198 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"196 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "199 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"197 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "203 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"198 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "200 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"199 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "200 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"200 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "201 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"201 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "202 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"201 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "208 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/cat";
"202 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "203 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"203 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "204 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"204 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "205 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat";
"204 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "207 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/cat";
"205 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" -> "206 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"206 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[1]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "209 GNMT/ResidualRecurrentDecoder[decoder]/__add__";
"209 GNMT/ResidualRecurrentDecoder[decoder]/__add__" -> "210 GNMT/ResidualRecurrentDecoder[decoder]/AsymmetricQuantizer/asymmetric_quantize";
"210 GNMT/ResidualRecurrentDecoder[decoder]/AsymmetricQuantizer/asymmetric_quantize" -> "211 GNMT/ResidualRecurrentDecoder[decoder]/cat";
"210 GNMT/ResidualRecurrentDecoder[decoder]/AsymmetricQuantizer/asymmetric_quantize" -> "235 GNMT/ResidualRecurrentDecoder[decoder]/__add__";
"211 GNMT/ResidualRecurrentDecoder[decoder]/cat" -> "212 GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]/dropout";
"212 GNMT/ResidualRecurrentDecoder[decoder]/Dropout[dropout]/dropout" -> "214 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"213 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "214 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"214 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "218 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"215 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "217 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"216 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateInputs[1]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "217 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"217 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "218 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"218 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "219 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"219 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "220 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"219 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "221 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"219 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "222 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"219 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "223 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"220 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "225 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"221 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "224 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"222 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "225 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"223 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "229 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"224 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "226 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"225 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "226 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"226 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "227 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"227 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "228 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"227 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "234 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/cat";
"228 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "229 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"229 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "230 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"230 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "231 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat";
"230 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "233 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/cat";
"231 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" -> "232 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"232 GNMT/ResidualRecurrentDecoder[decoder]/ModuleList[rnn_layers]/NNCF_RNN[2]/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "235 GNMT/ResidualRecurrentDecoder[decoder]/__add__";
"235 GNMT/ResidualRecurrentDecoder[decoder]/__add__" -> "236 GNMT/ResidualRecurrentDecoder[decoder]/AsymmetricQuantizer/asymmetric_quantize";
"236 GNMT/ResidualRecurrentDecoder[decoder]/AsymmetricQuantizer/asymmetric_quantize" -> "238 GNMT/ResidualRecurrentDecoder[decoder]/Classifier[classifier]/NNCFLinear[classifier]/linear";
"237 GNMT/ResidualRecurrentDecoder[decoder]/Classifier[classifier]/NNCFLinear[classifier]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "238 GNMT/ResidualRecurrentDecoder[decoder]/Classifier[classifier]/NNCFLinear[classifier]/linear";
}
