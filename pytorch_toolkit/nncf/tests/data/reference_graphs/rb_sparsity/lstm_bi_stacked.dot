strict digraph  {
"0 /nncf_model_input" [id=0, scope="", type=nncf_model_input];
"1 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=1, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"2 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=2, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=3, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"4 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=4, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"5 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=5, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"6 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=6, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=7, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"8 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=8, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=9, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"10 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=10, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"11 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=11, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"12 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=12, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"13 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=13, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"14 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=14, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"15 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=15, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"16 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=16, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"17 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" [id=17, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]", type=cat];
"18 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=18, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"19 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=19, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"20 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=20, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"21 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=21, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"22 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=22, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"23 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=23, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" [id=24, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__add__];
"25 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=25, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=26, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"27 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" [id=27, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=tanh];
"28 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=28, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"29 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=29, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=30, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"31 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" [id=31, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__add__];
"32 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" [id=32, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=tanh];
"33 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=33, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"34 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/cat" [id=34, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]", type=cat];
"35 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=35, scope="NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"36 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=36, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"37 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=37, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"38 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=38, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"39 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=39, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"40 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=40, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"41 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=41, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" [id=42, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__add__];
"43 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" [id=43, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"44 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" [id=44, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"45 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" [id=45, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=tanh];
"46 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" [id=46, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"47 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" [id=47, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__mul__];
"48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" [id=48, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__mul__];
"49 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" [id=49, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__add__];
"50 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" [id=50, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=tanh];
"51 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" [id=51, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__mul__];
"52 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/cat" [id=52, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]", type=cat];
"53 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=53, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"54 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=54, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"55 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=55, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"56 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=56, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"57 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=57, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"58 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=58, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" [id=59, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__add__];
"60 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" [id=60, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"61 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" [id=61, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"62 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" [id=62, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=tanh];
"63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" [id=63, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"64 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" [id=64, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__mul__];
"65 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" [id=65, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__mul__];
"66 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" [id=66, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__add__];
"67 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" [id=67, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=tanh];
"68 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" [id=68, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__mul__];
"69 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/cat" [id=69, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]", type=cat];
"70 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=70, scope="NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"71 NNCF_RNN/StackedRNN[rnn_impl]/cat" [id=71, scope="NNCF_RNN/StackedRNN[rnn_impl]", type=cat];
"72 NNCF_RNN/StackedRNN[rnn_impl]/cat" [id=72, scope="NNCF_RNN/StackedRNN[rnn_impl]", type=cat];
"0 /nncf_model_input" -> "3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"1 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "2 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"0 /nncf_model_input" -> "20 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"2 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"4 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "5 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"5 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "6 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"6 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "8 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "10 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "11 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"8 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "13 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "12 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"10 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "13 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"11 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "16 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"12 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "14 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"13 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "14 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"14 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "15 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"14 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "72 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"15 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "16 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"16 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "17 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat";
"16 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "71 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"17 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" -> "35 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"18 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "19 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"19 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "20 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"20 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"21 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "22 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"22 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "23 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"23 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "25 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "27 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh";
"24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "28 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"25 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "29 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"27 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" -> "30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"28 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "33 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"29 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "31 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "31 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"31 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "32 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh";
"31 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "72 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"32 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" -> "33 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"33 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "34 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/cat";
"33 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "71 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"34 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/cat" -> "35 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"35 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "38 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"35 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "55 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"36 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "37 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"37 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "38 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"38 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"39 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "40 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"40 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "41 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"41 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "43 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid";
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "44 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid";
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "45 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh";
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "46 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid";
"43 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" -> "48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"44 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" -> "47 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"45 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" -> "48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"46 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" -> "51 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"47 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "49 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "49 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"49 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "50 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh";
"49 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "72 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"50 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" -> "51 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"51 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "52 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/cat";
"51 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "71 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"52 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/cat" -> "70 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"53 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "54 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"54 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "55 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"55 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"56 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "57 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"57 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "58 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"58 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "60 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid";
"59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "61 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid";
"59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "62 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh";
"59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid";
"60 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" -> "65 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"61 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" -> "64 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"62 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" -> "65 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" -> "68 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"64 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "66 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"65 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "66 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"66 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "67 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh";
"66 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "72 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"67 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" -> "68 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"68 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "69 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/cat";
"68 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "71 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"69 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/cat" -> "70 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
}
