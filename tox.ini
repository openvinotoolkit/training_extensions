[tox]
isolated_build = true
skip_missing_interpreters = true
envlist =
    pre-commit
    pre-merge

[testenv]
basepython = python3
passenv =
    ftp_proxy
    HTTP_PROXY
    HTTPS_PROXY
    CUDA_VISIBLE_DEVICES
deps =
    coverage[toml]
    pytest
    flaky

[testenv:pre-commit]
deps =
    -r{toxinidir}/requirements/dev.txt
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/anomaly.txt
    -r{toxinidir}/requirements/openvino.txt
commands = 
    pip install -e .[detection]
    pre-commit run --all-files


[testenv:pre-merge]
deps =
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/anomaly.txt
    -r{toxinidir}/requirements/openvino.txt
    coverage
commands =
    # install detection requirements later as mmdet requires torch installed
    # Torch dependency is added to force torch version to remain the same
    pip install -e .[detection]
    coverage erase
    coverage run --include=otx/* -m pytest -ra --showlocals tests/unit tests/integration
    coverage report -m --fail-under=0
    coverage xml -o {toxworkdir}/coverage.xml


[testenv:anomaly]
; This is an environment to run anomaly tests only.
deps =
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/anomaly.txt
    -r{toxinidir}/requirements/openvino.txt
    coverage
commands =
    coverage erase
    coverage run --include=otx/* -m pytest -ra --showlocals tests/integration/cli/anomaly/
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml


[testenv:detection]
; This is an environment to run detection tests only.
deps =
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    coverage
commands =
    # install detection requirements later as mmdet requires torch installed.
    # Torch dependency is added to force torch version to remain the same
    pip install -e .[detection]
    coverage erase
    coverage run --include=otx/* -m pytest -ra --showlocals tests/integration/cli/detection/
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
