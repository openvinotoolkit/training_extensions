[tox]
isolated_build = true
skip_missing_interpreters = true
envlist =
    pre-commit
    pre-merge

[testenv]
basepython = python3
passenv =
    ftp_proxy
    HTTP_PROXY
    HTTPS_PROXY
    CUDA_VISIBLE_DEVICES
deps =
    coverage[toml]
    pytest
    pytest-timeout
    flaky

[testenv:pre-commit]
deps =
    torch @ https://download.pytorch.org/whl/lts/1.8/cu111/torch-1.8.2%2Bcu111-cp38-cp38-linux_x86_64.whl
    torchvision @ https://download.pytorch.org/whl/lts/1.8/cu111/torchvision-0.9.2%2Bcu111-cp38-cp38-linux_x86_64.whl
    torchtext @ https://download.pytorch.org/whl/lts/1.8/torchtext-0.9.2-cp38-cp38-linux_x86_64.whl
    -r{toxinidir}/requirements/dev.txt
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/anomaly.txt
    -r{toxinidir}/requirements/openvino.txt
commands = 
    pip install -e .[mpa]
    pre-commit run --all-files


[testenv:pre-merge]
deps =
    torch @ https://download.pytorch.org/whl/lts/1.8/cu111/torch-1.8.2%2Bcu111-cp38-cp38-linux_x86_64.whl
    torchvision @ https://download.pytorch.org/whl/lts/1.8/cu111/torchvision-0.9.2%2Bcu111-cp38-cp38-linux_x86_64.whl
    torchtext @ https://download.pytorch.org/whl/lts/1.8/torchtext-0.9.2-cp38-cp38-linux_x86_64.whl
    mmcv-full @ https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/mmcv_full-1.6.1-cp38-cp38-manylinux1_x86_64.whl
    coverage
    pytest-timeout
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/anomaly.txt
    -r{toxinidir}/requirements/openvino.txt
    -r{toxinidir}/requirements/classification.txt
    -r{toxinidir}/requirements/detection.txt
    -r{toxinidir}/requirements/segmentation.txt
    -r{toxinidir}/requirements/action.txt

commands =
    pip install -e .[mpa]
    # pre-merge teset
    coverage erase
    coverage run --include=otx/* -m pytest -ra --showlocals {posargs:tests/unit tests/integration}
    coverage report -m --fail-under=0
    coverage xml -o {toxworkdir}/coverage.xml

; all env below need to be verified
[testenv:anomaly]
; This is an environment to run anomaly tests only.
deps =
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/anomaly.txt
    -r{toxinidir}/requirements/openvino.txt
    coverage
commands =
    coverage erase
    coverage run --include=otx/* -m pytest -ra --showlocals tests/integration/cli/anomaly/
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml


[testenv:classification]
; This is an environment to run classification tests only.
deps =
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    coverage
commands =
    # install classification requirements later as mmdet requires torch installed.
    # Torch dependency is added to force torch version to remain the same
    pip install -e .[classification]
    coverage erase
    coverage run --include=otx/* -m pytest -ra --showlocals tests/integration/cli/classification/
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml


[testenv:detection]
; This is an environment to run detection tests only.
deps =
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    coverage
commands =
    # install detection requirements later as mmdet requires torch installed.
    # Torch dependency is added to force torch version to remain the same
    pip install -e .[detection]
    # pre-merge test
    coverage erase
    coverage run --include=otx/* -m pytest -ra --showlocals tests/integration/cli/detection/
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml


[testenv:segmentation]
; This is an environment to run detection tests only.
deps =
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    coverage
commands =
    # install detection requirements later as mmdet requires torch installed.
    # Torch dependency is added to force torch version to remain the same
    pip install -e .[segmentation]
    coverage erase
    coverage run --include=otx/* -m pytest -ra --showlocals tests/integration/cli/segmentation/
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
