[tox]
isolated_build = true
skip_missing_interpreters = true
envlist =
    pre-commit
    pre-merge


[testenv]
basepython = python3
passenv =
    ftp_proxy
    HTTP_PROXY
    HTTPS_PROXY
    CUDA_VISIBLE_DEVICES
    SNYK_ENDPOINT
    SNYK_TOKEN
deps =
    torch @ https://download.pytorch.org/whl/cu117/torch-1.13.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchvision @ https://download.pytorch.org/whl/cu117/torchvision-0.14.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchtext @ https://download.pytorch.org/whl/torchtext-0.14.1-cp38-cp38-linux_x86_64.whl
    mmcv-full @ https://download.openmmlab.com/mmcv/dist/cu117/torch1.13.0/mmcv_full-1.7.0-cp38-cp38-manylinux1_x86_64.whl
    -r{toxinidir}/requirements/api.txt
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    -r{toxinidir}/requirements/anomaly.txt
    -r{toxinidir}/requirements/classification.txt
    -r{toxinidir}/requirements/detection.txt
    -r{toxinidir}/requirements/segmentation.txt
    -r{toxinidir}/requirements/action.txt


[testenv:pre-commit]
deps =
    {[testenv]deps}
    -r{toxinidir}/requirements/dev.txt
skip_install = true
commands =
    pre-commit run --all-files


[testenv:pre-merge]
deps =
    {[testenv]deps}
    -r{toxinidir}/requirements/dev.txt
use_develop = true
commands =
    coverage erase
    coverage run -m pytest -ra --showlocals --junitxml={toxworkdir}/test-results.xml {posargs:tests/unit tests/integration}
    coverage report -m --fail-under=0
    coverage xml -o {toxworkdir}/coverage.xml

[testenv:pre-merge-cls]
deps =
    torch @ https://download.pytorch.org/whl/cu117/torch-1.13.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchvision @ https://download.pytorch.org/whl/cu117/torchvision-0.14.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchtext @ https://download.pytorch.org/whl/torchtext-0.14.1-cp38-cp38-linux_x86_64.whl
    mmcv-full @ https://download.openmmlab.com/mmcv/dist/cu117/torch1.13.0/mmcv_full-1.7.0-cp38-cp38-manylinux1_x86_64.whl
    -r{toxinidir}/requirements/api.txt
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    -r{toxinidir}/requirements/classification.txt
    -r{toxinidir}/requirements/dev.txt
use_develop = true
commands =
    coverage erase
    coverage run -m pytest -ra --showlocals --junitxml={toxworkdir}/test-results.xml tests/integration/cli/classification
    coverage report -m --fail-under=0
    coverage xml -o {toxworkdir}/coverage.xml

[testenv:pre-merge-det]
deps =
    torch @ https://download.pytorch.org/whl/cu117/torch-1.13.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchvision @ https://download.pytorch.org/whl/cu117/torchvision-0.14.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchtext @ https://download.pytorch.org/whl/torchtext-0.14.1-cp38-cp38-linux_x86_64.whl
    mmcv-full @ https://download.openmmlab.com/mmcv/dist/cu117/torch1.13.0/mmcv_full-1.7.0-cp38-cp38-manylinux1_x86_64.whl
    -r{toxinidir}/requirements/api.txt
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    -r{toxinidir}/requirements/detection.txt
    -r{toxinidir}/requirements/dev.txt
use_develop = true
commands =
    coverage erase
    coverage run -m pytest -ra --showlocals --junitxml={toxworkdir}/test-results.xml tests/integration/cli/detection
    coverage report -m --fail-under=0
    coverage xml -o {toxworkdir}/coverage.xml

[testenv:pre-merge-seg]
deps =
    torch @ https://download.pytorch.org/whl/cu117/torch-1.13.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchvision @ https://download.pytorch.org/whl/cu117/torchvision-0.14.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchtext @ https://download.pytorch.org/whl/torchtext-0.14.1-cp38-cp38-linux_x86_64.whl
    mmcv-full @ https://download.openmmlab.com/mmcv/dist/cu117/torch1.13.0/mmcv_full-1.7.0-cp38-cp38-manylinux1_x86_64.whl
    -r{toxinidir}/requirements/api.txt
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    -r{toxinidir}/requirements/segmentation.txt
    -r{toxinidir}/requirements/dev.txt
use_develop = true
commands =
    coverage erase
    coverage run -m pytest -ra --showlocals --junitxml={toxworkdir}/test-results.xml tests/integration/cli/segmentation
    coverage report -m --fail-under=0
    coverage xml -o {toxworkdir}/coverage.xml

[testenv:pre-merge-action]
deps =
    torch @ https://download.pytorch.org/whl/cu117/torch-1.13.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchvision @ https://download.pytorch.org/whl/cu117/torchvision-0.14.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchtext @ https://download.pytorch.org/whl/torchtext-0.14.1-cp38-cp38-linux_x86_64.whl
    mmcv-full @ https://download.openmmlab.com/mmcv/dist/cu117/torch1.13.0/mmcv_full-1.7.0-cp38-cp38-manylinux1_x86_64.whl
    -r{toxinidir}/requirements/api.txt
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    -r{toxinidir}/requirements/action.txt
    -r{toxinidir}/requirements/dev.txt
use_develop = true
commands =
    coverage erase
    coverage run -m pytest -ra --showlocals --junitxml={toxworkdir}/test-results.xml tests/integration/cli/action
    coverage report -m --fail-under=0
    coverage xml -o {toxworkdir}/coverage.xml

[testenv:pre-merge-anomaly]
deps =
    torch @ https://download.pytorch.org/whl/cu117/torch-1.13.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchvision @ https://download.pytorch.org/whl/cu117/torchvision-0.14.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchtext @ https://download.pytorch.org/whl/torchtext-0.14.1-cp38-cp38-linux_x86_64.whl
    mmcv-full @ https://download.openmmlab.com/mmcv/dist/cu117/torch1.13.0/mmcv_full-1.7.0-cp38-cp38-manylinux1_x86_64.whl
    -r{toxinidir}/requirements/api.txt
    -r{toxinidir}/requirements/base.txt
    -r{toxinidir}/requirements/openvino.txt
    -r{toxinidir}/requirements/anomaly.txt
    -r{toxinidir}/requirements/dev.txt
use_develop = true
commands =
    coverage erase
    coverage run -m pytest -ra --showlocals --junitxml={toxworkdir}/test-results.xml tests/integration/cli/anomaly
    coverage report -m --fail-under=0
    coverage xml -o {toxworkdir}/coverage.xml

[testenv:fuzzing-test]
deps =
    {[testenv:pre-merge]deps}
    atheris
use_develop = true
commands =
    coverage erase
    - coverage run tests/fuzzing/cli_fuzzing.py {posargs:-dict=tests/fuzzing/assets/cli/operations.dict -artifact_prefix={toxworkdir}/ -print_final_stats=1 -atheris_runs=500000}
    coverage report --precision=2
    ; coverage html -d {toxworkdir}/htmlcov


[testenv:build-doc]
deps =
    {[testenv]deps}
    -r{toxinidir}/requirements/docs.txt
use_develop = true
change_dir = {toxinidir}/docs
allowlist_externals =
    make
commands =
    make html


[testenv:build-pkg]
deps =
    build==0.10.0
    -r{toxinidir}/requirements/dev.txt
    torch @ https://download.pytorch.org/whl/cu117/torch-1.13.1%2Bcu117-cp38-cp38-linux_x86_64.whl
    torchvision @ https://download.pytorch.org/whl/cu117/torchvision-0.14.1%2Bcu117-cp38-cp38-linux_x86_64.whl
skip_install = true
allowlist_externals =
    rm
    find
commands =
    rm -rf ./dist
    python -m build --sdist
    find ./dist -type f -name *.tar.gz -exec pip install {}[full] \;
    pytest {posargs:tests/unit tests/integration/cli}


[testenv:snyk-scan]
allowlist_externals =
    bash
    curl
    wget
    chmod
    rm
    *snyk*
use_develop = true
commands =
    bash -c "pip freeze > snyk-req.txt"
    curl https://static.snyk.io/cli/latest/snyk-linux -o {toxworkdir}/snyk
    chmod +x {toxworkdir}/snyk
    {toxworkdir}/snyk config set endpoint={env:SNYK_ENDPOINT}
    {toxworkdir}/snyk config set disable-analytics=1
    - {toxworkdir}/snyk test --file=snyk-req.txt --package-manager=pip --sarif-file-output={toxworkdir}/snyk.sarif --json-file-output={toxworkdir}/snyk.json
    - {toxworkdir}/snyk monitor --file=snyk-req.txt --package-manager=pip
    wget -P .tox/ https://github.com/snyk/snyk-to-html/releases/download/v2.3.6/snyk-to-html-linux
    chmod +x {toxworkdir}/snyk-to-html-linux
    {toxworkdir}/snyk-to-html-linux -i {toxworkdir}/snyk.json -o {toxworkdir}/snyk.html -d
    rm {toxworkdir}/snyk
    rm {toxworkdir}/snyk-to-html-linux
    rm snyk-req.txt

[testenv:weekly-test]
deps =
    {[testenv]deps}
    -r{toxinidir}/requirements/dev.txt
use_develop = true
commands =
    coverage erase
    coverage run -m pytest -ra --showlocals --junitxml={toxworkdir}/weekly-test-results.xml {posargs:tests/regression}
    python tests/regression/summarize_test_results.py --output_path {toxworkdir}


[testenv:bandit-scan]
skip_install = true
deps =
    bandit
allowlist_externals =
    bandit
commands =
    - bandit -r -c {toxinidir}/ipas_default.config {toxinidir}/ -f txt -o {toxworkdir}/bandit-report.txt
