[tox]
isolated_build = true
skip_missing_interpreters = true

[pytest]
addopts = --csv=.tox/tests-{env:TOXENV_TASK}-{env:TOXENV_PYVER}.csv

[testenv]
setenv =
    TOX_WORK_DIR={toxworkdir}
task =
    all: "all"
    action: "action"
    classification: "classification"
    multi_cls_classification: "multi_cls_classification"
    multi_label_classification: "multi_label_classification"
    hlabel_classification: "hlabel_classification"
    detection: "detection"
    rotated_detection: "rotated_detection"
    instance_segmentation: "instance_segmentation"
    semantic_segmentation: "semantic_segmentation"
    visual_prompting_all: "visual_prompting_all"
    visual_prompting: "visual_prompting"
    zero_shot_visual_prompting: "visual_prompting"
    anomaly_classification: "anomaly_classification"
    anomaly_detection: "anomaly_detection"
    anomaly_segmentation: "anomaly_segmentation"
passenv =
    ftp_proxy
    HTTP_PROXY
    HTTPS_PROXY
    CUDA_VISIBLE_DEVICES
    CI_DATA_ROOT

[testenv:pre-commit]
deps =
    pre-commit==2.20.0
skip_install = true
commands =
    pre-commit run --all-files


[testenv:unit-test-{py310, py311}]
deps =
    .[base,dev]
commands =
    ; Run Unit-Test with coverage report.
    pytest tests/unit \
        --cov=otx \
        --cov-report=xml:{toxworkdir}/coverage_{envname}.xml \
        --cov-report=term-missing \
        --cov-fail-under=0 \
        {posargs}


[testenv:integration-test-{all, action, classification, multi_cls_classification, multi_label_classification, hlabel_classification, detection, rotated_detection, instance_segmentation, semantic_segmentation, visual_prompting_all, visual_prompting, zero_shot_visual_prompting, anomaly_classification, anomaly_detection, anomaly_segmentation}]
setenv =
    CUBLAS_WORKSPACE_CONFIG=:4096:8
deps =
    .[base,dev]
commands =
    python -m pytest tests/integration -ra --showlocals --csv={toxworkdir}/{envname}.csv --task {[testenv]task} --open-subprocess {posargs}


[testenv:e2e-test-{all, action, classification, detection, rotated_detection, instance_segmentation, semantic_segmentation, visual_prompting, anomaly}]
setenv =
    CUBLAS_WORKSPACE_CONFIG=:4096:8
deps =
    .[base,dev]
commands =
    python -m pytest tests/e2e -ra --showlocals --csv={toxworkdir}/{envname}.csv --task {[testenv]task} --open-subprocess {posargs}


[testenv:perf-benchmark]
deps =
    .[base,dev]
commands =
    pytest -ra --showlocals --csv={toxworkdir}/{envname}-test.csv {posargs:tests/perf}


[testenv:build-doc]
deps =
    {[testenv:unit-test-py310]deps}
    .[docs]
commands_pre =
    ; [TODO]: Needs to be fixed so that this is not duplicated for each test run
    otx install -v
change_dir = {toxinidir}/docs
allowlist_externals =
    make
commands =
    make html


[testenv:bandit-scan]
skip_install = true
deps =
    bandit
allowlist_externals =
    bandit
commands =
    - bandit -r -c .ci/ipas_default.config {toxinidir}/ -f txt -o {toxworkdir}/bandit-report.txt


[testenv:fuzzing]
deps =
    .[dev]
    atheris
    coverage
extras = full
commands_pre =
    ; [TODO]: Needs to be fixed so that this is not duplicated for each test run
    otx install -v
commands =
    coverage erase
    - coverage run tests/fuzzing/cli_fuzzing.py {posargs:-artifact_prefix={toxworkdir}/ -print_final_stats=1 -atheris_runs=500000}
    coverage report --precision=2
